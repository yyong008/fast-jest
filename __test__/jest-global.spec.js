import * as jestGlobalApi from "@jest/globals"

test("init", () => {
	expect(1).toBe(1)
})

test("jestObject Test", () => {
	const jestObject = Object.keys(jest)
	expect(jestObject).toContain("advanceTimersByTime")
	expect(jestObject).toContain("advanceTimersToNextTimer")
	expect(jestObject).toContain("autoMockOff")
	expect(jestObject).toContain("autoMockOn")
	expect(jestObject).toContain("clearAllMocks")
	expect(jestObject).toContain("clearAllTimers")
	expect(jestObject).toContain("createMockFromModule")
	expect(jestObject).toContain("deepUnmock")
	expect(jestObject).toContain("disableAutomock")
	expect(jestObject).toContain("doMock")
	expect(jestObject).toContain("dontMock")
	expect(jestObject).toContain("enableAutomock")
	expect(jestObject).toContain("fn")
	expect(jestObject).toContain("genMockFromModule")
	expect(jestObject).toContain("getRealSystemTime")
	expect(jestObject).toContain("getTimerCount")
	expect(jestObject).toContain("isMockFunction")
	expect(jestObject).toContain("isolateModules")
	expect(jestObject).toContain("mock")
	expect(jestObject).toContain("mocked")
	expect(jestObject).toContain("requireActual")
	expect(jestObject).toContain("requireMock")
	expect(jestObject).toContain("resetAllMocks")
	expect(jestObject).toContain("resetModules")
	expect(jestObject).toContain("resetModules")
	expect(jestObject).toContain("restoreAllMocks")
	expect(jestObject).toContain("retryTimes")
	expect(jestObject).toContain("runAllImmediates")
	expect(jestObject).toContain("runAllTicks")
	expect(jestObject).toContain("runOnlyPendingTimers")
	expect(jestObject).toContain("setMock")
	expect(jestObject).toContain("setSystemTime")
	expect(jestObject).toContain("setTimeout")
	expect(jestObject).toContain("spyOn")
	expect(jestObject).toContain("unmock")
	expect(jestObject).toContain("unstable_mockModule")
	expect(jestObject).toContain("useFakeTimers")
	expect(jestObject).toContain("useRealTimers")
})

test("jestGlobalApi", () => {
	const jestGlobalApis = Object.keys(jestGlobalApi)
	expect(jestGlobalApis).toContain("afterAll")
	expect(jestGlobalApis).toContain("afterEach")
	expect(jestGlobalApis).toContain("beforeAll")
	expect(jestGlobalApis).toContain("beforeEach")
	expect(jestGlobalApis).toContain("describe")
	expect(jestGlobalApis).toContain("it")
	expect(jestGlobalApis).toContain("test")
	expect(jestGlobalApis).toContain("fdescribe")
	expect(jestGlobalApis).toContain("fit")
	expect(jestGlobalApis).toContain("xdescribe")
	expect(jestGlobalApis).toContain("xit")
	expect(jestGlobalApis).toContain("xtest")
	expect(jestGlobalApis).toContain("expect")
	expect(jestGlobalApis).toContain("jest")
	expect(jestGlobalApis).toContain("default")
})